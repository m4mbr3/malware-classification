import os
import sys
import traceback

import progressbar

from multiprocessing import Pool

DIR = os.path.abspath(sys.argv[1])
bar = None
counter = 0

def update(r):
    global counter
    global bar
    counter += 1
    bar.update(counter)

def converter(absname, worker_id):
    input_ = DIR + '/' + absname + '.bytes'
    output_ = DIR + '/' + absname + '.filter'
    try:
        with open(input_) as file_:
            longline = ''
            for line in file_:
                longline += line[8:].replace(' ','').replace('\r\n', '')
            out = open(output_ , 'w')
            out.write(longline)
            out.close()
        # print "returning from {}".format(worker_id)
    except:
        traceback.print_tb()
    return worker_id


pool = Pool(processes=20)

def main():
    global bar
    global pool
    i = 0
    for root, dirs, filenames in os.walk(DIR):
        bar  = progressbar.ProgressBar(
            max_value=len(filter(lambda x:x.endswith('.bytes'),
                                 filenames)))
        for f in filter(lambda x:x.endswith('.bytes'), filenames):
            absname = f.split('.')[0]
            pool.apply_async(converter,
                             args=(absname, i,),
                             callback=update)
            i += 1
        pool.close()
        pool.join()
if __name__ == "__main__":
    main()
